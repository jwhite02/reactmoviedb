{"version":3,"sources":["components/header/Header.js","components/footer/Footer.js","components/content/Body.js","components/forms/FormSearch.js","components/merge/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Footer","Body","this","props","children","FormSearch","id","style","width","onSubmit","getDrinks","htmlFor","type","name","placeholder","value","size","onChange","handleChange","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","target","console","log","setState","state","drinkName","_ref","asyncToGenerator","regenerator_default","mark","_callee","evt","drinksurl","myDrinkData","wrap","_context","prev","next","preventDefault","concat","axios","get","sent","drinksData2","data","drinks","stop","_x","apply","arguments","componentDidMount","_callee2","myDrinks","_context2","drinksData","bookData","webBookData","renderDrinks","someddrinks","mapDrink","strIngredient","map","adrink","key","idDrink","Card","CardImg","top","src","strDrinkThumb","alt","CardBody","CardTitle","strDrink","CardSubtitle","strIngredient1","CardText","fontSize","strInstructions","CardLink","href","_unused","error","header_Header","forms_FormSearch","content_Body","footer_Footer","App","merge_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3d8de8f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"parallax-header parallax\">\n                <div className=\"header d-flex align-content-center\">\n                    <div className=\"header d-flex \"><h1 className=\"h1-font\">Mixed Spirits</h1></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer mt-5\">\n                \n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\nclass Body extends Component {\n    render() {\n        return (\n            <div className=\"mybody\">\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Body;","import React from 'react'\n\nconst FormSearch = (props) => {\n  return (\n    <div id=\"\" className=\"mx-auto my-5\" style={{ width: 30 + 'rem' }}>\n          <form onSubmit={props.getDrinks} >\n              <label htmlFor=\" \">\n                  <span id=\"\" className=\"\"> <h3>Search for Drinks</h3>  </span>\n                  <input type=\"text\" name=\"drinkName\" id=\"\" placeholder=\"\" value={props.value} size=\"\" onChange={props.handleChange} />\n              </label>\n              <button className=\"ml-2 p-1\" > Search </button>\n          </form>\n        </div> \n  )\n}\n\nexport default FormSearch\n","import React, { Component } from 'react';\nimport Header from '../header/Header';\nimport Footer from '../footer/Footer';\nimport Body from '../content/Body';\nimport axios from 'axios';\nimport FormSearch from '../forms/FormSearch';\nimport { Card, CardImg, CardBody, CardTitle, CardSubtitle, CardText, CardLink } from 'reactstrap';\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookData: [],\n            webBookData: [],\n            drinksData: [],\n            drinksData2: [],\n            renderDrinks: [],\n            drinkName: '',\n            value: ''\n        };\n    }\n  \n\n\n    handleChange = (event) => {\n        if (event.target.name === \"drinkName\") {\n            console.log(\"in handChange \" + event.target.value)\n            \n            this.setState({ value: event.target.value });\n\n            console.log(\"My drinkname \" + this.state.drinkName);\n        }\n    }\n\n    /*  leave of 'const' when used in a class */\n     getDrinks = async (evt) => {\n         const drinkName = evt.target.drinkName.value;\n         evt.preventDefault();\n         //alert(drinkName);\n         let drinksurl = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${drinkName}`;\n         console.log(drinksurl);\n\n         const myDrinkData = await axios.get(drinksurl);\n         this.setState({\n             drinksData2: myDrinkData.data\n         });\n\n         if (this.state.drinksData2.drinks === null || undefined) {\n             this.setState({\n                 drinksData2: [\"No Match\"]\n             });\n         }\n         console.log(this.state.drinksData2);\n\n    }\n\n    componentDidMount = async () => {\n        let drinksurl = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=margarita';\n        \n         let drinks = await axios.get(drinksurl);\n\n         this.setState({\n             drinksData: drinks.data\n         });\n\n         let myDrinks = this.state.drinksData;\n\n        console.log(myDrinks.drinks);\n    }\n\n    render() {\n        let someddrinks;\n        let mapDrink;\n        let strIngredient = \"strIngredient\";\n        let testst = strIngredient + \"1\";\n        console.log(testst);\n        try {\n            if (this.state.drinksData2 !== null || undefined) {\n                if (this.state.drinksData2[0] === \"No Match\") {\n                    someddrinks = [<div className=\"mx-auto\" > <h1>No Match</h1> </div>];\n                    console.log(someddrinks);\n                }\n                 mapDrink = this.state.drinksData2.drinks;\n                 console.log(mapDrink);\n                someddrinks = mapDrink.map((adrink) => {\n                    return <div key={adrink.idDrink}>\n                        <Card className=\"m-1 mb-4\" style={{ width: 20 + 'rem' }}>\n                            <CardImg top width=\"100%\" src={adrink.strDrinkThumb} alt=\"Card image cap\" />\n                            <CardBody>\n                                <CardTitle><h3>{adrink.strDrink}</h3></CardTitle>\n                                <CardSubtitle>{adrink.strIngredient1}</CardSubtitle>\n                                <CardText style={{ fontSize: 1.25 + 'rem' }} > Directions: {adrink.strInstructions}  </CardText>\n                                <CardLink href=\"#\">Card Link</CardLink>\n                            </CardBody>\n                        </Card>\n                    </div>\n                });\n            }\n        }\n        catch {\n            console.error('An error occurred fetching XML');\n        }\n\n        return (\n            <div>\n                <Header />\n                <FormSearch value={this.state.value} handleChange={this.handleChange} getDrinks={this.getDrinks}  />\n                <Body>\n                    <div className=\"d-lg-flex flex-wrap cardHolder justify-content-center\">\n                        {someddrinks}\n                    </div>\n                </Body>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './components/merge/Home';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\"> \n          <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}